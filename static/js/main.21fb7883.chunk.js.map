{"version":3,"sources":["screens/AboutScreen/coffee-bags.png","screens/AboutScreen/app-profile.png","screens/LearnScreen/LearnContentScreens/Assets/grind-size-icon.png","screens/LearnScreen/LearnContentScreens/Assets/tasting-notes-icon.png","components/Heading/Heading.js","components/Footer/Footer.js","components/GooglePlayStoreButton/GooglePlayStoreButton.js","components/AppleStoreButton/AppleStoreButton.js","components/IconImagesRow/IconImagesRow.js","components/ScrollToTop/ScrollToTop.js","components/DownloadButtons/DownloadButtons.js","screens/HomeScreen/HomeScreen.js","screens/AboutScreen/AboutScreen.js","screens/LearnScreen/LearnScreen.js","screens/ContactScreen/ContactScreen.js","screens/PrivacyPolicyScreen/PrivacyPolicyScreen.js","screens/LearnScreen/LearnContentScreens/InformationStandardsScreen.js","screens/LearnScreen/LearnContentScreens/GrindSizesScreen.js","screens/LearnScreen/LearnContentScreens/TastingNotesScreen.js","screens/LearnScreen/LearnContentScreens/FlavorProfileScreen.js","components/HomeButton/HomeButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SIZES","XSMALL","SMALL","MEDIUM","LARGE","XLARGE","XXLARGE","SIZE_MAP","Heading","size","children","H","className","Footer","href","target","rel","src","alt","GooglePlayStoreButton","AppStoreButton","IconImagesRow","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","DownloadButtons","HomeScreen","srcSet","type","AboutScreen","Helmet","name","content","require","to","LearnScreen","ContactScreen","PrivacyPolicyScreen","InformationStandardsScreen","GrindSizesScreen","TastingNotesScreen","HomeButton","App","basename","process","exact","path","from","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.21fb7883.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee-bags.dc5c1a2d.png\";","module.exports = __webpack_public_path__ + \"static/media/app-profile.e3fe7609.png\";","module.exports = __webpack_public_path__ + \"static/media/grind-size-icon.6bccc743.png\";","module.exports = __webpack_public_path__ + \"static/media/tasting-notes-icon.1b801f2e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Heading.css';\n\nconst SIZES = {\n  XSMALL: 'XSMALL',\n  SMALL: 'SMALL',\n  MEDIUM: 'MEDIUM',\n  LARGE: 'LARGE',\n  XLARGE: 'XLARGE',\n  XXLARGE: 'XXLARGE',\n};\n\nconst SIZE_MAP = {\n  [SIZES.XXLARGE]: 1,\n  [SIZES.XLARGE]: 2,\n  [SIZES.LARGE]: 3,\n  [SIZES.MEDIUM]: 4,\n  [SIZES.SMALL]: 5,\n  [SIZES.XSMALL]: 6,\n};\n\nexport default function Heading({\n  size,\n  children,\n}) {\n  const H = `h${SIZE_MAP[size]}`;\n  const className = `heading-component-base heading-component-${SIZE_MAP[size]}`;\n  return (\n    <H className={className}>\n      {children}\n    </H>\n  );\n}\n\nHeading.SIZES = SIZES;\n\nHeading.propTypes = {\n  size: PropTypes.oneOf(Object.values(Heading.SIZES)).isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './Footer.css';\n\nexport default function Footer() {\n  return (\n    <div className=\"FooterContainer\">\n      <div className=\"FooterLeftContainer\">\n      </div>\n      <div className=\"FooterCenterContainer\">\n\n        <div className=\"FooterLogoContainer\">\n          <a href=\"https://www.instagram.com/tastinggrounds/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img\n              src={ process.env.PUBLIC_URL + '/assets/instagram.png' }\n              className=\"FooterLogoImage\"\n              alt=\"follow us on Instagram\"\n            />\n          </a>\n          <a href=\"https://twitter.com/tastinggrounds\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img\n              src={ process.env.PUBLIC_URL + '/assets/twitter.png' }\n              className=\"FooterLogoImage\"\n              alt=\"follow us on Twitter\"\n            />\n          </a>\n          <a href=\"https://www.facebook.com/Tasting-Grounds-103688631520558\" target=\"_blank\" rel=\"noopener noreferrer\"> \n            <img\n              src={ process.env.PUBLIC_URL + '/assets/facebook.png' }\n              className=\"FooterLogoImage\"\n              alt=\"follow us on Facebook\"\n            />\n          </a>\n        </div>\n        <p className=\"FooterCopyright\">Copyright 2021 | Tasting Grounds, LLC</p>\n      </div>\n      <div className=\"FooterRightContainer\">\n        <a className=\"pp-link\" href=\"/privacy\">Privacy Policy</a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './GooglePlayStoreButton.css';\n\nexport default function GooglePlayStoreButton() {\n  return (\n    <a href=\"https://play.google.com/store/apps/details?id=com.tastinggrounds.app\">\n      <img\n        className=\"GooglePlayStoreButton\"\n        src=\"../assets/google-play-badge.png\"\n        alt=\"download on the google play store\"\n      />\n    </a>\n  );\n}\n","import React from 'react';\n\nimport './AppStoreButton.css';\n\nexport default function AppStoreButton() {\n  return (\n    <a href=\"https://apps.apple.com/us/app/tasting-grounds/id1526958511\">\n      <img\n        className=\"AppStoreButton\"\n        src=\"../assets/apple-store-download.svg\"\n        alt=\"download on the apple store\"\n      />\n    </a>\n  );\n}\n","import React from 'react';\n\nimport './IconImagesRow.css';\n\nexport default function IconImagesRow() {\n  return (\n    <div className=\"IconsImagesContainer\">\n        <img \n            className=\"CoffeesCirlceImage\" \n            src={ process.env.PUBLIC_URL +\"assets/coffee-circle.png\" }\n            alt=\"tasting grounds coffee icon\" \n        />\n        <img \n            className=\"RoastersCirlceImage\" \n            src={ process.env.PUBLIC_URL + \"assets/roaster-circle.png\" } \n            alt=\"tasting grounds roaster icon\" \n        />\n        <img \n            className=\"UsersCirlceImage\" \n            src={process.env.PUBLIC_URL + \"assets/user-circle.png\" }\n            alt=\"tasting grounds user icon\" \n        />\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\n\nimport { AppleStoreButton, GooglePlayStoreButton } from '../../components';\nimport './DownloadButtons.css';\n\nexport default function DownloadButtons() {\n  return (\n    <div className=\"DownloadButtonContainer\">\n      <AppleStoreButton />\n      <GooglePlayStoreButton />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Heading, DownloadButtons } from '../../components';\n\nimport './HomeScreen.css';\n\nexport default function HomeScreen() {\n  return (\n    <div className=\"HomeScreenContainer\">\n      <div className=\"HomeScreenContentContainer\">\n        <picture>\n          <source srcSet=\"https://production.cdntg.xyz/assets/marketing-site/app-home-screenshot.webp\" type=\"image/webp\" />\n          <img\n            className=\"ScreenshotImage\"\n            src=\"https://production.cdntg.xyz/assets/marketing-site/app-home-screenshot.png\"\n            alt=\"app screenshot\"\n          />\n        </picture>\n        <div className=\"HomeScreenContentTextContainer\">\n          <Heading size={Heading.SIZES.XXLARGE}>Brew Coffee Together</Heading>\n          <Heading size={Heading.SIZES.XSMALL}>A coffee community where you can log your brews, rate & review your coffees, discover new roasters, and share with your friends.</Heading>\n          <DownloadButtons />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Heading, IconImagesRow, DownloadButtons } from '../../components';\n\nimport { Link } from 'react-router-dom';\n\nimport './AboutScreen.css';\n\nexport default function AboutScreen() {\n  return (\n    <div className=\"AboutScreenContainer\">\n      <Helmet>\n        <title>About | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"About Tasting Grounds - the specialty coffee app for logging & tracking your brew process, discovering new coffees & roasters, and sharing with your friends & the community.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>About</Heading>\n      <div className=\"AboutScreenBodyContainer\">\n          <Heading size={Heading.SIZES.XSMALL}>\n            We created Tasting Grounds to connect the coffee community - from farmers to roasters to drinkers - to share, learn about, and brew coffee together!\n          </Heading>\n          <IconImagesRow />\n          <Heading size={Heading.SIZES.MEDIUM}>Our Origin Story</Heading>\n          <p>In the descent from a coffee lover into a coffee-obsessed maniac, I started collecting a stack of coffee bags and scribbling difficult to read notes about each of my brews. When talking coffee with my friends, we’d often ask each other what we’d been drinking recently, how we had brewed it, and what flavors the coffee reminded us of. We were all in the pursuit of brewing and drinking the best coffee we possibly could. It was clear that life would be better if we could do all of this in one place.</p>\n          <figure className=\"AlignCenter\">\n            <img \n              className=\"CoffeeBagsImage\" \n              src={require(\"./coffee-bags.png\")} \n              alt=\"coffee bags\" \n            />\n              <figcaption>\n                <em>A small piece of my weird coffee bag collection.</em>\n              </figcaption>\n          </figure>\n          <p>I downloaded countless coffee apps in an attempt to solve this problem. Some nailed certain aspects of what I was looking for, some checked a few boxes but did so poorly, and others were simply so buggy that they were unusable. I pitched the idea to the best software engineer I knew (Patrick) and thus Tasting Grounds was born.</p>\n          <p>We are aiming to build a community for coffee beginners, aficionados, and experts to brew coffee together. With Tasting Grounds, you can log and rate your brews and tasting notes, explore what coffees other members of the community are drinking and what they are tasting, interact with your friends about their brews, and discover new roasters to love. We have many more features in the works to connect you more with the coffee community and to help you learn more about coffees, roasting, and brewing.</p>\n          <figure className=\"AlignCenter\">\n            <img \n              className=\"AppProfileImage\" \n              src={require(\"./app-profile.png\")} \n              alt=\"app profile\" \n            />\n              <figcaption>\n                <em>My much-improved coffee inventory, shared with my friends </em>😊\n              </figcaption>\n          </figure>\n          <p>We hope you love using Tasting Grounds as much as we do. Don’t forget to <Link to=\"/contact\">share your feedback with us</Link> and rate & review Tasting Grounds on your app store to help shape the future of the community! ✨</p>\n          <p>- Peter</p> \n          <em>Note, I originally wrote published this on <a href=\"https://citizenscoffee.co/brew-coffee-together-introducing-tasting-grounds/\">our good friends blog</a>. Edits have been made for context. </em>🤙\n          <p></p>\n        </div>\n        <DownloadButtons />\n      </div>\n  );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Heading, IconImagesRow, DownloadButtons } from '../../components';\n\nimport { Link } from 'react-router-dom';\n\nimport './LearnScreen.css';\n\nexport default function LearnScreen() {\n  return (\n    <div className=\"LearnScreenContainer\">\n      <Helmet>\n        <title>Learn | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"At Tasting Grounds, we are forever students of coffee. Learning more about coffee is a huge part of why we built the specialty coffee app for logging & tracking your brew process, discovering new coffees & roasters, and sharing with your friends & the community.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Learn</Heading>\n      <div className=\"LearnScreenBodyContainer\">\n        <Heading size={Heading.SIZES.XSMALL}>\n          At Tasting Grounds, we are students of coffee. Learning more about coffee growing, production, roasting, and brewing is a huge part of why we built this specialty coffee community.\n          We will share guides to all things coffee and using the Tasting Grounds app here! \n          </Heading>\n        <IconImagesRow />\n        <div className=\"RequestTopic\">\n        {/* eslint-disable-next-line */}\n          Want to see a guide on a particular topic? 📖 <Link to=\"contact\">Let us know</Link>!\n        </div>\n        <div className=\"GuidelinesContainer\">\n          {/* eslint-disable-next-line */}\n          <Heading size={Heading.SIZES.SMALL}>⚙ <Link to=\"learn/grind-sizes\">Guide to Coffee Grind Sizes</Link></Heading>\n            <Heading size={Heading.SIZES.XSMALL}>Grind size is one of the important and easily-adjustable characteristics of your brew process. This is our guide to grind sizes and how to log them on Tasting Grounds. \n            </Heading>\n          {/* eslint-disable-next-line */}\n          <Heading size={Heading.SIZES.SMALL}>🍇 <Link to=\"learn/flavor-profiles\">Guide to Coffee Flavor Profiles</Link></Heading>\n            <Heading size={Heading.SIZES.XSMALL}>Some coffee flavor profiles can seem too good to be true. Coffee tastes like coffee, right? This is our guide on how to detect and describe coffee flavor profiles. \n            </Heading>\n          {/* eslint-disable-next-line */}\n          <Heading size={Heading.SIZES.SMALL}>📋  <Link to=\"learn/tasting-notes\">Guide to Coffee Tasting Notes</Link></Heading>\n            <Heading size={Heading.SIZES.XSMALL}>Coffee tasting notes can be confusing for both beginners and seasoned coffee tasters. This is our guide on how to taste coffee and score tasting notes on Tasting Grounds. \n            </Heading>\n          {/* eslint-disable-next-line */}\n          <Heading size={Heading.SIZES.SMALL}>ℹ  <Link to=\"/learn/information-standards\">Guide to Coffee & Roaster Information</Link></Heading>\n            <Heading size={Heading.SIZES.XSMALL}>The Tasting Grounds community thrives off of user generated content. The more coffees and roasters you add to our catalog, the more the rest of the community has to explore! We do our best to verify all user created content. Read more about our information review and verification standards.\n            </Heading>\n        </div>\n      </div>\n      <DownloadButtons />\n    </div>\n  );\n}","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Heading } from '../../components';\n\nimport './ContactScreen.css';\n\nexport default function ContactScreen() {\n  return (\n    <div className=\"ContactScreenContainer\">\n      <Helmet>\n        <title>Contact | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"Contact Tasting Grounds for help, feedback, bugs reports, or feature requests for the iOS and Android coffee app for logging & tracking your brew process, discovering new coffees & roasters, and sharing with your friends & the community.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Contact</Heading>\n      <div className=\"ContactScreenTextContainer\">\n        <Heading size={Heading.SIZES.XSMALL}>Have some feedback or need help with something? Drop us a question, feature request, bug report, or any  other note in the form below or send us an email at&nbsp;\n          <a href=\"mailto:hey@tastinggrounds.com\" target=\"_blank\" rel=\"noopener noreferrer\">hey@tastinggrounds.com</a>!\n        </Heading>\n      </div>\n      {/* eslint-disable-next-line */}\n      <iframe className=\"ContactForm\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSf6rqxHMBBIy-D3nlXvGinxEj4TA5fiWlPkv0Wg1QfiUTYVzQ/viewform?embedded=true\">Loading…</iframe>\n    </div>\n  );\n}\n","/* eslint-disable max-len */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport './PrivacyPolicyScreen.css';\n\nexport default function PrivacyPolicyScreen() {\n  return (\n    <div className=\"PrivacyPolicyText\">\n      <Helmet>\n        <title>Tasting Grounds | Privacy Policy for the coffee app to discover, rate, and review coffees</title>\n        <meta \n          name=\"description\" \n          content=\"Privacy policy for Tasting Grounds. The iOS and Android coffee app for logging & tracking your brew process, discovering new coffees & roasters, and sharing with your friends & the community.\" \n        />\n      </Helmet>\n      <h1>Privacy Policy</h1>\n\n      <p>Last updated: January 14, 2021</p>\n      <p>\n        We care deeply about your privacy. This Privacy Policy describes how and when Tasting Grounds, LLC (“Tasting Grounds”, “we”, “us”, or “our”) collects, uses, and shares personal information when you use this website,&nbsp;\n        <a href=\"https://tastinggrounds.com\">https://tastinggrounds.com</a>\n        , or our mobile application(s), collectively referred to as the “Service”.\n      </p>\n      <p>By interacting with the Service, you agree that you have read, understood, and agree to be bound by all of the terms of this Privacy Policy. If you do not agree with the terms of this Privacy Policy, you cannot, and we do not authorize you to, access, browse, or use the Service.</p>\n\n      <h2>Personal Information We Collect</h2>\n\n      <h3>Information You Provide to Us</h3>\n      <p>In order to provide the Service to you, we require you to provide us with certain personal information, including but not limited to your name, email address, and username.</p>\n      <p>Additionally, we will collect information that you provide to us, including through support, feedback, reviews, ratings, comments, profile information, and photos you upload. Our Service is designed for sharing - by default, certain types of information you choose to submit will be made public to users of the Service. This includes your account username, profile picture, and any comments or posts you make.</p>\n\n      <h3>Log Information</h3>\n      <p>When you access the Service, our servers automatically record information that your browser sends whenever you visit a website. These server logs may include information such as your web request, Internet Protocol (IP) address, browser type, browser language, the date and time of your request, your computer operating system, mobile device and mobile operating system, name of your internet service provider or your mobile carrier, and one or more cookies (small text files containing a string of characters) that may uniquely identify your browser. Our servers may also automatically record what you click on while visiting the Service. We may also derive your approximate location from your IP address.</p>\n\n      <h3>Cookies</h3>\n      <p>Cookies allow a web server to transfer data to a computer for record keeping and other purposes. We and our service providers use cookies and other technologies to, among other things, better serve you with more tailored information and facilitate your ongoing access to and use of the Service, as well as for online tracking purposes. If you do not want information collected through the use of cookies, there is a simple procedure in most browsers that allows you to decline the use of cookies.</p>\n\n      <h3>Web Beacons</h3>\n      <p>Web beacons (also known as Pixel tags and clear GIFs) may be used to, among other things, track the actions of users of the Service, deliver services, and analyze the effectiveness of our promotional campaigns, for example. We may also include web beacons in our marketing email messages or newsletters to determine whether an email is opened or if links are clicked.</p>\n\n      <h3>Aggregate Information</h3>\n      <p>We may aggregate personal information and other information collected from the Service. This information may include, for example and without limitation, the number of people who used the Service and other user demographics. Aggregated information does not personally identify you or any other user of the Service.</p>\n\n      <h2>How We Use Information</h2>\n      <p>Information that we collect through the Service may be used for the following purposes:</p>\n      <ul>\n        <li>Responding to your inquiries and fulfill your requests</li>\n        <li>Sending you email updates you have requested or information regarding the Service, to comply with a legal obligation, or based on our legitimate interests</li>\n        <li>Providing the Service to our users</li>\n        <li>Administering and protecting the Service</li>\n        <li>Improving and customizing the Service or developing new products and services</li>\n        <li>Purposes that you authorize at the time of providing the information</li>\n        <li>Any other purpose when in de-identified or aggregate form</li>\n      </ul>\n\n      <h2>Information We Share</h2>\n      <p>We may share your personal information collected through the Service as described in this section.</p>\n\n      <h3>In Providing The Service</h3>\n      <p>Tasting Grounds is designed for sharing. When you create an account, create a post, or interact with other users, the information submitted will be shared publicly with other users of the Service. You should be aware that any content you share publicly may be further shared by other users of the Service and that we are not responsible for any such sharing of information you have shared.</p>\n\n      <h3>Service Providers</h3>\n      <p>We engage third parties that provide services on our behalf. These can include providers of services such as website hosting, data analysis, information technology and related infrastructure provision, customer service, auditing, and other services. We may share personal information and non-personal information with these third parties for the purpose of enabling them to provide these services.</p>\n\n      <h3>Law And Legal</h3>\n      <p>We may share information collected through the Service as required to comply with applicable law and regulations and to cooperate with public and governmental authorities, including law enforcement. We also may share information for other legal reasons such as when it is reasonably necessary to protect the rights, property or safety of you, our other users, Tasting Grounds or the public.</p>\n\n      <h3>Consent</h3>\n      <p>We may share information In other circumstances when you consent to the sharing.</p>\n\n      <h3>Business Transactions</h3>\n      <p>In the event of any reorganization, merger, sale, joint venture, assignment, transfer or other disposition of all or any portion of our business, assets or stock, including in connection with any bankruptcy or similar proceedings.</p>\n\n      <h3>Aggregate</h3>\n      <p>We may share aggregate or de-identified information without restriction. This information may include, without limitation, the number of users who have registered for the Service. Such aggregate information does not identify you individually.</p>\n\n      <h2>Security</h2>\n      <p>We use reasonable measures to protect personal information under our control. We also require our third-party service providers to use reasonable measures to protect the confidentiality and security of the personal information they maintain for us. Unfortunately, no data transmission or data storage system can be guaranteed to be 100% secure. If you have reason to believe that your interaction with us is no longer secure, please immediately notify us of the problem by contacting us in accordance with the \"Contact Us” section below.</p>\n\n      <h2>Your Choices</h2>\n\n      <h3>Information You Share</h3>\n      <p>You can choose whether or not to share information on the Service; however, if you choose not to share certain information with us, you may not be able to register as a user and access functionality of the Service.</p>\n\n      <h3>Marketing From Us</h3>\n      <p>\n        If you no longer want to receive marketing-related emails from us on a going-forward basis, you may opt out by emailing us at&nbsp;\n        <a href=\"mailto:support@tastinggrounds.com\" target=\"_blank\" rel=\"noopener noreferrer\">support@tastinggrounds.com</a>\n        &nbsp;with your preference. Note that we may still send you important administrative messages, from which you cannot opt out.\n      </p>\n\n      <h2>Children</h2>\n      <p>Children are not eligible to use the Service, and we ask that minors (children under the age of 16) not submit any personal information to us. If we receive notice or reasonably believe that a child under the age of 16 has provided us with personal information, we will take steps to delete the account and the associated personal information that has been provided to us.</p>\n\n      <h2>Updates To This Policy</h2>\n      <p>We may update the Privacy Policy from time to time. Any changes to this Privacy Policy will become effective when we post the revised Privacy Policy here or when we email you about the changes. Your use of the Service following any such updates will constitute your acceptance of such updates.</p>\n\n      <h2>Contact Us</h2>\n      <p>\n        Please send us an email at&nbsp;\n        <a href=\"mailto:support@tastinggrounds.com\" target=\"_blank\" rel=\"noopener noreferrer\">support@tastinggrounds.com</a>\n        &nbsp;if you have any questions or comments regarding this Privacy Policy.\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Heading, DownloadButtons } from '../../../components';\n\nimport './LearnContentScreens.css';\n\nexport default function InformationStandardsScreen() {\n  return (\n    <div className=\"LearnContentScreensContainer\">\n      <Helmet>\n        <title>Guide to Coffee & Roaster Information | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"The guidelines used by Tasting Grounds for verifying coffee and roasters information created by community users of the app.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Guide to Coffee & Roaster Information</Heading>\n      <div className=\"LearnContentSceensBodyContainer\">\n        <p>The Tasting Grounds team reviews and verifies all roasters and coffees that are added by members of the community. It is best and most helpful if you can enter as much information as accurately as possible, but do not worry if you don’t have all of the information handy.</p>\n        <p>A few things to keep in mind when creating roasters and coffees:</p>\n          <ul>\n            <li>There are many roasters with similar names, so including either location or the website URL ensures that we can verify the roaster correctly.</li>\n            <li>There are certain details that we don’t make available when creating coffees and roasters. We will always fill these in ourselves, when the information is verifiable. Fields include descriptions, images, purchase URLs, etc.</li>\n            <li>We may modify or remove details entered if we find inaccuracies or cannot verify the information. This may include the names of coffees which are displayed in your brews (however we are not modifying any details of your brew).</li>\n            <li>Coffee names can be a tricky field, especially when it comes to single origin coffees that roasters often name based on their origins. Some standards we follow when naming:</li>\n              <ul>\n                <li>The main text of a coffee bag label - if it includes the origin or other details like the process, we will include it in the name field (it my be necessary to distinguish between a washed and naturally processed coffee of the same name).</li>\n                <li>The main label given to a coffee on the roaster’s website.</li>\n                <li>If the bag and website do not match exactly, we will favor the name on the bag.</li>\n              </ul>\n            <li>We don’t support every flavor note that you’re going to see roasters use or that you might think of when tasting. \n              Our flavor selections are based on the <a href=\"https://counterculturecoffee.com/learn/resource-center/coffee-tasters-flavor-wheel\" target=\"_blank\" rel=\"noopener noreferrer\">Counter Culture flavor wheel</a>. We use this as it is well known and a fairly comprehensive wheel of flavors people are reminded of and we want to work off a common baseline.\n              When you are reminded of a very specific taste in a coffee you brew, we recommend you mention it in the comment of your brew!\n              If a flavor is referenced by the roaster that we do not have:</li>\n              <ul>\n                <li>We may select the closed similar flavor(s).</li>\n                <li>We may exclude the flavor note all together.</li>\n              </ul>\n          </ul>\n        <p>Have you found something inaccurate in our catalog, are we missing an option in any field that you want to see, or are you a roaster that wants to enter your own information? Reach out to us at <a href=\"mailto:hey@tastinggrounds.com\" target=\"_blank\" rel=\"noopener noreferrer\">hey@tastinggrounds.com</a>!</p>\n      </div>\n      <DownloadButtons />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Heading, DownloadButtons } from '../../../components';\n\nimport './LearnContentScreens.css';\n\nexport default function GrindSizesScreen() {\n  return (\n    <div className=\"LearnContentScreensContainer\">\n      <Helmet>\n        <title>Guide to Coffee Grind Sizes | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"The Tasting Grounds coffee app guidelines for coffee grind sizes based on the brew method and recommended settings for Comandante C40, Timemore Chestnut, Fellow Ode, and Baratz Encore grinders.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Guide to Coffee Grind Sizes</Heading>\n      <div className=\"LearnContentSceensBodyContainer\">\n        <p>Grind size is one of the most important and easily-adjustable characteristics of your brew process.</p>\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeIcon\" \n            src={require(\"./Assets/grind-size-icon.png\")} \n            alt=\"grind size icon\" \n          />\n        </div>\n        <p>The primary impact grind size has on your brew is the surface area of the coffee grounds which the water will be in contact with. A finer grind has a larger total surface area and will extract the coffee faster while a coarser grind will have a smaller surface area and will extract slower.</p>\n        <p>A secondary impact grind size has on your brew, particularly with percolation brewing methods (like a pour over or drip), is resistance as the water flows through the grounds. A finer grind will slow the flow rate of the water and increase the level of extraction while a coarser will have a faster flow rate and a less extraction.</p>\n        <p>Striking the right balance of surface area and resistance will make a huge difference in your resulting cup. When it comes to tracking your grind size in Tasting Grounds, it is difficult to account for the different settings on the many different grinders out there in a way that is useful to you and your friends in the community. That’s why we’ve set up seven categories of grind size. Here are some general guidelines to follow for those categories:</p>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-very-fine.png\"\n            alt=\"very fine grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Very Fine</Heading>\n        <p>A very fine grind is pretty similar in texture to flour.</p>\n        <p><b>THINK:</b> Turkish Coffee</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 5-10 clicks</li>\n          <li>Timemore Chestnut: 0-6 (not recommended)</li>\n          <li>Fellow Ode: probably should try a different grinder</li>\n          <li>Baratza Encore: 1-5</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-fine.png\"\n            alt=\"fine grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Fine</Heading>\n        <p>A fine grind is going to be something like powdered sugar - not quite as coarse as sugar but not as fine as flour.</p>\n        <p><b>THINK:</b> Espresso or Moka Pot</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 11-15</li>\n          <li>Timemore Chestnut: 7-10</li>\n          <li>Fellow Ode: 1-2</li>\n          <li>Baratza Encore: 5-10</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-medium-fine.png\"\n            alt=\"medium-fine grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Medium-Fine</Heading>\n        {/* eslint-disable-next-line */}\n        <p>A medium-fine grind is...well it’s somewhere between the medium and fine examples (if someone can think of a good one let us know 🙃).</p>\n        <p><b>THINK:</b> Single serving pour over brewers</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 16-20</li>\n          <li>Timemore Chestnut: 11-15</li>\n          <li>Fellow Ode: 2-3</li>\n          <li>Baratza Encore: 10-15</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-medium.png\" \n            alt=\"medium grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Medium</Heading>\n        <p>A medium grind is slightly finer than table salt or close to dry sand.</p>\n        <p><b>THINK:</b> Aeropress, Siphon, Flat-bottom (Kalita Wave) or Cone-shaped (Hario V60) brewers</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 21-25</li>\n          <li>Timemore Chestnut: 16-20</li>\n          <li>Fellow Ode: 3-5</li>\n          <li>Baratza Encore: 10-20</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-medium-coarse.png\" \n            alt=\"medium-coarse grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Medium-Coarse</Heading>\n        <p>A medium-coarse grind is somewhat gritty like a rough sand.</p>\n        <p><b>THINK:</b> Chemex or Clever Dripper</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 26-30</li>\n          <li>Timemore Chestnut: 21-23</li>\n          <li>Fellow Ode: 5-6</li>\n          <li>Baratza Encore: 20-25</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-coarse.png\" \n            alt=\"coarse grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Coarse</Heading>\n        <p>A coarse grind is the consistency of kosher salt.</p>\n        <p><b>THINK:</b> French Press</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 31-35</li>\n          <li>Timemore Chestnut: 24-28</li>\n          <li>Fellow Ode: 6-9</li>\n          <li>Baratza Encore: 25-30</li>\n        </ul>\n        <br />\n        <div className=\"AlignCenter\">\n          <img\n            className=\"GrindSizeImages\" \n            src=\"https://production.cdntg.xyz/assets/learning/grind-size-very-coarse.png\" \n            alt=\"very coarse grind size\" \n          />\n        </div>\n        <Heading size={Heading.SIZES.SMALL}>Very Coarse</Heading>\n        <p>A very coarse grind is basically tiny pebbles...kidding! it is about the size of sea salt particles.</p>\n        <p><b>THINK:</b> Cold Brew</p>\n        <p><b>Approximate Settings</b></p>\n        <ul>\n          <li>Comandante C40: 36+</li>\n          <li>Timemore Chestnut: 29+</li>\n          <li>Fellow Ode: 9-11</li>\n          <li>Baratza Encore: 30-40</li>\n        </ul>\n      </div>\n      <DownloadButtons />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Heading, DownloadButtons } from '../../../components';\n\nimport './LearnContentScreens.css';\n\nexport default function TastingNotesScreen() {\n  return (\n    <div className=\"LearnContentScreensContainer\">\n      <Helmet>\n        <title>Guide to Coffee Tasting Notes | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"The Tasting Grounds coffee app guide to coffee tasting notes - Aromatics (Fragrance/Armoa), Acidity, Body, Sweetness, and Aftertast - and how to score them when cupping or brewing.\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Guide to Coffee Tasting Notes</Heading>\n      <div className=\"LearnContentSceensBodyContainer\">\n        <p>Expert coffee tasters score coffees by “cupping” <a href=\"https://sca.coffee/research/protocols-best-practices\" target=\"_blank\" rel=\"noopener noreferrer\">following the protocols</a> put out by the Specialty Coffee Association (SCA). \n          The <a href=\"https://store.sca.coffee/products/scaa-official-cupping-form?variant=14732977990\" target=\"_blank\" rel=\"noopener noreferrer\">standard SCA cupping form</a> is used for recording tasting notes and scoring a common set of attributes used for evaluating the quality of a coffee.</p>\n        <div className=\"AlignCenter\">\n          <img\n            className=\"TastingNotesIcon\" \n            src={require(\"./Assets/tasting-notes-icon.png\")} \n            alt=\"tasting notes wheel\" \n          />\n        </div>\n        <p>For beginners - and even experienced coffee tasters that haven’t been trained on the SCA methodologies - tasting notes can be extremely confusing and intimidating. \n          Acidity? Body? Sweetness? …it all tastes like coffee! Don’t sweat it. We’re going to explain a little bit about what you should be thinking about when it comes to different coffee tasting notes.</p>\n        <p>In the Tasting Grounds app, we  give you five tasting characteristics to rate on a scale of 1-5 (at 0.5 increments). \n          Why didn’t we mirror the SCA cupping form you ask? We hoped to create a good balance of simplicity for those who are less experienced and untrained, yet detailed enough for those who have tasted and scored many coffees.</p>\n        <p>One important thing to keep in mind when using this scale is that you are NOT scoring “How (enter tasting note here) is this coffee?”\n           - you are scoring the quality of the tasting notes. For example - there might have been a time that you’ve had a piece of cake that was just too sweet for you.\n            You wouldn’t rate that a 5 on sweetness just because it was extremely sweet, you might rate it lower because it was unpleasantly sweet.</p>\n        <p>If you still find yourself confused about how to identify these qualities in a coffee after reading this, we’d highly suggest you try cupping multiple coffees side-by-side. \n          Comparing unique coffees will really help you pick apart the nuances in coffee characteristics.</p>\n        <br />\n        <Heading size={Heading.SIZES.SMALL}>Aromatics</Heading>\n        <p>Aromatics include the <b>Fragrance</b> and the <b>Aroma</b> of a coffee. <b>Fragrance</b> is the smell of the ground coffee when still dry and <b>Aroma</b> is the smell of the coffee when infused with hot water. \n        You can evaluate the fragrance by sniffing the grounds before pouring water onto the coffee. If you are cupping, there are two distinct phases where you can evaluate aroma. First, by sniffing the aromas released while breaking the crust and second, by sniffing the aromas released while the coffee steeps. If you aren’t cupping you might think of the first phase during the bloom and second as the next pour(s) - that all depends on your brew process. The rating you give should reflect the preference of each of the aromatic aspects of your coffee.</p>\n        <br />\n        <Heading size={Heading.SIZES.SMALL}>Body</Heading>\n        <p>Body can be thought of as the “weight” of the coffee. You can perceive it best between your tongue and the roof of your mouth. \n        You might often hear people talk about the “mouthfeel” when referring to the body of a coffee. Terms like watery, creamy, and buttery or light, full, and balanced when describing the body. A light body or a heavy body that is well suited to the coffee can each be considered pleasant and given a high score. </p>\n        <br />\n        <Heading size={Heading.SIZES.SMALL}>Acidity</Heading>\n        <p>Acidity can be the hardest to understand and most contentious tasting note in coffee. The spectrum of acidity is best spanned from “brightness” to “sourness”. There are many types of acids that contribute to flavors in coffee. Some of the most common to think about are:</p>\n        <ul>\n          <li><b>Acetic Acid</b> - will remind you of sour, fermenty flavors like vinegar. Typically this will be considered favorable in small amounts, but will be unpleasant when stronger</li>\n          <li><b>Citric Acid</b> - you can probably guess this one! It will remind of you citrus fruit notes and possibly sourness if it is very strong</li>\n          <li><b>Malic Acid</b> - will be quite similar to citric acid, but the most common reminder of malic acid is the crispness, juiciness, and sourness of a green apple</li>\n          <li><b>Phosphoric Acid</b> - will be more closely associated with the sweetness or creaminess of the coffee. You might be reminded of cola or the combination of sweet and tart you get from berries apple</li>\n        </ul>\n        <p>This is not a definitive list of acids that you’ll find in coffee, but it should give you some things to think about when evaluating acidity. Like with body, a high acidity coffee or a low acidity coffee can each be considered pleasant and given a high score.</p>\n        <br />\n        <Heading size={Heading.SIZES.SMALL}>Sweetness</Heading>\n        <p>Sweetness can obviously refer to sweetness in the terms you are familiar with, but it can also be the result of the perception of a fullness of flavor. Something that may help when it comes to thinking of sweetness is the opposite notes of sour, astringent, vegetal notes. Sweetness comes from sugars, glycols, alcohols, and amino acids in coffee. As a basic rule of thumb, a fruiter sweetness might come through in lighter roasts while caramelier, chocolatier sweetness comes in darker roasts. Each type of sweetness can be enjoyable and the rating should reflect how pleasing it is to you.</p>\n        <br />\n        <Heading size={Heading.SIZES.SMALL}>Aftertaste</Heading>\n        <p>Aftertaste is the length of positive taste and aroma of the coffee that remains on your palate after you’ve swallowed the coffee. You should think about how the flavors of the coffee linger. Typically, a shorter, unpleasant linger should get a lower score while a longer, positive linger should get a higher score for aftertaste.</p>\n        <br />\n      </div>\n      <DownloadButtons />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Heading, DownloadButtons } from '../../../components';\nimport { Link } from 'react-router-dom';\n\nimport './LearnContentScreens.css';\n\nexport default function TastingNotesScreen() {\n  return (\n    <div className=\"LearnContentScreensContainer\">\n      <Helmet>\n        <title>Guide to Coffee Flavor Profiles | Tasting Grounds</title>\n        <meta \n          name=\"description\" \n          content=\"The Tasting Grounds coffee app guide to coffee flavor profiles - how to describe coffee flavors and understand the flavor notes your roasters use on their coffee bags\" \n        />\n      </Helmet>\n      <Heading size={Heading.SIZES.XXLARGE}>Guide to Coffee Flavor Profiles</Heading>\n      <div className=\"LearnContentSceensBodyContainer\">\n        <p>Ginger? Pineapple?? Bubblegum??? Skittles????</p>\n        <p>We have seen some pretty wild flavor descriptors on some coffees recently and know that’s left a lot of people, especially those new to the specialty coffee world, wondering - flavors like that must have been added to the coffee, right? Coffee tastes like coffee, not like fruit or candy, right? WRONG, kind of.</p>\n        <p>There are many factors that contribute to the way that a coffee tastes, all of which we have worked to highlight at various points in the Tasting Grounds app. A coffee’s variety, origin, growing altitude, processing method, roast level, brewing method, brewing water, grind size, and more will all factor into the flavors of a coffee. But equally as important, if not more important, as those factors, is you. Your experiences with different tastes are going to have an enormous impact on the flavors that you perceive.</p>\n        <p>We think you should ask yourself this when it comes to flavor profile descriptors - <b><em>what does this coffee remind you of?</em></b></p>\n        <div className=\"AlignCenter\">\n          <img\n            className=\"FlavorProfileImage\" \n            src={\"https://production.cdntg.xyz/assets/marketing-site/flavor-wheel.webp\"}  \n            alt=\"coffee flavor wheel\" \n          />\n        </div>\n        <p>Flavor is a combination of what you are tasting and smelling - so don’t discount the impact aromatics have on the flavors a coffee may remind of you. Check out our <Link to=\"learn/tasting-notes\">Guide to Tasting Notes</Link> if you haven’t already for some factors to consider in how you perceive flavor.</p>\n        <p>Referencing a flavor wheel can be helpful when trying to describe what you are tasting. The flavor descriptors available on Tasting Grounds are roughly based on <a href=\"https://counterculturecoffee.com/learn/resource-center/coffee-tasters-flavor-wheel\" target=\"_blank\" rel=\"noopener noreferrer\">Counter Culture’s Flavor Wheel</a>. We referenced this wheel as it represents many common flavors you will hear people use when describing coffee. To use the wheel, work from the center out to narrow down a specific flavor note.</p>\n        <p>Do not get discouraged if you can’t taste the same flavor profiles as those that the roaster puts on the bag! Everyone’s tastes are unique so the notes on the bag are only the reflection of what the roaster has experienced or the story they are trying to tell with the coffee.</p>\n        <p>If you find yourself struggling to pick out flavors after considering what you are reminded of, we’d definitely encourage you to try anything and everything to familiarize yourself with more flavors! Go grab one of each fruit at the store, especially the ones you’ve never seen or tried before. You can’t be reminded of a flavor you’ve never tasted before!</p>\n      </div>\n      <DownloadButtons />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './HomeButton.css';\n\nexport default function HomeButton() {\n  return (\n    <div className=\"HomeButtonContainer\">\n      <img\n        className=\"HomeIconImage\"\n        src={ process.env.PUBLIC_URL + '/assets/app-icon.png' }\n        alt=\"tasting grounds logo\"\n      />\n      <img\n        className=\"HomeTextImage\"\n        src={ process.env.PUBLIC_URL + '/assets/app-text.png' }\n        alt=\"tasting grounds logo text\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport Helmet from 'react-helmet';\n\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport AboutScreen from './screens/AboutScreen/AboutScreen';\nimport LearnScreen from './screens/LearnScreen/LearnScreen';\nimport ContactScreen from './screens/ContactScreen/ContactScreen';\nimport PrivacyPolicyScreen from './screens/PrivacyPolicyScreen/PrivacyPolicyScreen'\nimport InformationStandardsScreen from './screens/LearnScreen/LearnContentScreens/InformationStandardsScreen';\nimport GrindSizesScreen from './screens/LearnScreen/LearnContentScreens/GrindSizesScreen';\nimport TastingNotesScreen from './screens/LearnScreen/LearnContentScreens/TastingNotesScreen';\nimport FlavorProfilesScreen from './screens/LearnScreen/LearnContentScreens/FlavorProfileScreen';\n\nimport HomeButton from './components/HomeButton/HomeButton';\nimport Footer from './components/Footer/Footer';\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ScrollToTop />\n      <div>\n        <div className=\"AppHeaderContainer\">\n          <div className=\"right-grouping\">\n            <Link className=\"home-link\" to=\"/\">\n              <HomeButton />\n            </Link>\n          </div>\n          <div className=\"left-grouping\">\n            <Link className=\"right-link\" to=\"/about\">About</Link>\n            <Link className=\"right-link\" to=\"/learn\">Learn</Link>\n            <Link className=\"right-link\" to=\"/contact\">Contact</Link>\n          </div>\n        </div>\n\n        <Helmet>\n          <title>Tasting Grounds | Discover, Rate, Share, & Brew Coffee Together</title>\n          <meta\n            name=\"description\"\n            content=\"Log & rate your coffee brews, discover new coffees & roasters, and share with the community of fellow specialty coffee lovers with the free Tasting Grounds app for iOS and Android! Tasting Grounds is what some may call the Untappd or Vivino of coffee!\"\n          />\n        </Helmet>\n\n        <div className=\"AppContentContainer\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutScreen />\n            </Route>\n            <Route exact path=\"/learn\">\n                <LearnScreen />\n            </Route>\n            <Route path=\"/learn/information-standards\">\n                <InformationStandardsScreen/>\n            </Route>\n            <Route path=\"/learn/grind-sizes\">\n                <GrindSizesScreen />\n            </Route>\n            <Route path='/learn/flavor-profiles'>\n                <FlavorProfilesScreen />\n            </Route>\n            <Route path=\"/learn/tasting-notes\">\n                <TastingNotesScreen />\n            </Route>\n            <Route path=\"/contact\">\n              <ContactScreen />\n            </Route>\n            <Route path=\"/privacy\">\n              <PrivacyPolicyScreen />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n      <Footer />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}